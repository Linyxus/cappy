module {
  val test: [IO <: Any] -> (a: IO^{cap}, b: IO^{cap}) -> Unit = 
    [IO <: Any] => {
      (a: IO^{cap}, b: IO^{cap}) => {
        val f1: [C <: {cap}] ->{} (op: () ->{C} Unit) ->{} Unit = 
          [C <: {cap}] => {
            (op: () ->{C} Unit) => {
              op()
            }
          }
        val f2: () ->{a} Unit = 
          () => {
            val _$2: IO^{a} = 
              a
            ()
          }
        val t3: Unit = 
          f1[{a}](f2)
        val f4: () ->{b} Unit = 
          () => {
            val _$3: IO^{b} = 
              b
            ()
          }
        val t5: Unit = 
          f1[{a, b}](f4)
        ()
      }
    }
}
